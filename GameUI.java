import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class GameUI extends JFrame {
    private GameBoard gameBoard;
    private GameTimer gameTimer; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
    private JLabel timerLabel; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Label ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    private Timer swingTimer; // ‚úÖ ‡πÉ‡∏ä‡πâ Swing Timer

    public GameUI(int rows, int cols) {
        gameBoard = new GameBoard(rows, cols);
        gameTimer = new GameTimer(); // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
        gameTimer.start();

        setTitle("Memory Game");
        setSize(600, 650);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JPanel gridPanel = new JPanel(new GridLayout(rows, cols));
        JButton[][] buttons = new JButton[rows][cols];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                JButton btn = new JButton("?");
                int r = i, c = j;
                btn.addActionListener(e -> flipCard(r, c, btn));
                buttons[i][j] = btn;
                gridPanel.add(btn);
            }
        }

        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤
        timerLabel = new JLabel("Time: 0 sec", SwingConstants.CENTER);
        add(timerLabel, BorderLayout.NORTH);
        add(gridPanel, BorderLayout.CENTER);

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        swingTimer = new Timer(1000, e -> {
            long elapsed = gameTimer.getElapsedTime();
            timerLabel.setText("Time: " + elapsed + " sec");
        });
        swingTimer.start();

        setVisible(true);
    }

    private void flipCard(int row, int col, JButton button) {
        Card card = gameBoard.getCard(row, col);
        if (!card.isFlipped() && !card.isMatched()) {
            card.flip();
            button.setText(String.valueOf(card.getId()));

            checkGameEnd(); // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏°‡∏à‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        }
    }

    private void checkGameEnd() {
        // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÑ‡∏û‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        boolean allMatched = true;
        for (int i = 0; i < gameBoard.getRows(); i++) {
            for (int j = 0; j < gameBoard.getCols(); j++) {
                if (!gameBoard.getCard(i, j).isMatched()) {
                    allMatched = false;
                    break;
                }
            }
        }

        if (allMatched) {
            gameTimer.stop();
            swingTimer.stop(); // ‚úÖ ‡∏´‡∏¢‡∏∏‡∏î Swing Timer

            long finalTime = gameTimer.getElapsedTime();
            JOptionPane.showMessageDialog(this, "üéâ ‡∏ä‡∏ô‡∏∞‡πÅ‡∏•‡πâ‡∏ß! ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: " + finalTime + " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ");

            this.dispose(); // ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏°
        }
    }
}
